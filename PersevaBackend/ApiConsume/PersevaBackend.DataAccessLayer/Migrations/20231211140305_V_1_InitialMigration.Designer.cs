// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersevaBackend.DataAccessLayer.Concrete;

#nullable disable

namespace PersevaBackend.DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231211140305_V_1_InitialMigration")]
    partial class V_1_InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BasketId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("BasketId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.BillingInfo", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillingId"));

                    b.Property<string>("BillingAddress")
                        .HasColumnType("text");

                    b.Property<string>("BillingCity")
                        .HasColumnType("text");

                    b.Property<string>("BillingCompany")
                        .HasColumnType("text");

                    b.Property<string>("BillingCountry")
                        .HasColumnType("text");

                    b.Property<string>("BillingDistrict")
                        .HasColumnType("text");

                    b.Property<string>("BillingEmail")
                        .HasColumnType("text");

                    b.Property<string>("BillingFirstName")
                        .HasColumnType("text");

                    b.Property<string>("BillingLastName")
                        .HasColumnType("text");

                    b.Property<string>("BillingNationalId")
                        .HasColumnType("text");

                    b.Property<string>("BillingPhone")
                        .HasColumnType("text");

                    b.Property<int>("BillingPostcode")
                        .HasColumnType("integer");

                    b.Property<string>("BillingTaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("BillingTaxOffice")
                        .HasColumnType("text");

                    b.HasKey("BillingId");

                    b.ToTable("BillingInfos");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CargoId"));

                    b.Property<string>("CargoCode")
                        .HasColumnType("text");

                    b.Property<string>("CargoCompany")
                        .HasColumnType("text");

                    b.Property<double>("CargoCost")
                        .HasColumnType("double precision");

                    b.Property<string>("CargoCurrency")
                        .HasColumnType("text");

                    b.Property<DateTime>("CargoDateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CargoDateDispatched")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CargoMethod")
                        .HasColumnType("text");

                    b.Property<string>("CargoSize")
                        .HasColumnType("text");

                    b.Property<string>("CargoSizeUnit")
                        .HasColumnType("text");

                    b.Property<string>("CargoStatus")
                        .HasColumnType("text");

                    b.Property<string>("CargoTrackingNumber")
                        .HasColumnType("text");

                    b.Property<string>("CargoTrackingUrl")
                        .HasColumnType("text");

                    b.Property<string>("CargoType")
                        .HasColumnType("text");

                    b.Property<decimal>("CargoWeight")
                        .HasColumnType("numeric");

                    b.Property<string>("CargoWeightUnit")
                        .HasColumnType("text");

                    b.HasKey("CargoId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("DiscountCode")
                        .HasColumnType("text");

                    b.Property<string>("DiscountCurrency")
                        .HasColumnType("text");

                    b.Property<DateTime>("DiscountDateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DiscountExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiscountNumAvailable")
                        .HasColumnType("text");

                    b.Property<string>("DiscountNumUsed")
                        .HasColumnType("text");

                    b.Property<string>("DiscountType")
                        .HasColumnType("text");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Fulfillment", b =>
                {
                    b.Property<int>("FulfillmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FulfillmentId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("integer");

                    b.HasKey("FulfillmentId");

                    b.HasIndex("CargoId");

                    b.ToTable("Fulfillments");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("BillingId")
                        .HasColumnType("integer");

                    b.Property<int?>("BillingInfoBillingId")
                        .HasColumnType("integer");

                    b.Property<int>("CargoId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("FulfillmentsId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Postcode")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("RefundId")
                        .HasColumnType("integer");

                    b.Property<int>("RefundsId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("BillingInfoBillingId");

                    b.HasIndex("CargoId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("FulfillmentsId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RefundId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CoverImage")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Stock")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Refund", b =>
                {
                    b.Property<int>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RefundId"));

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefundDateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RefundDateRefunded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefundStatus")
                        .HasColumnType("text");

                    b.Property<double>("RefundTotal")
                        .HasColumnType("double precision");

                    b.Property<string>("RefundType")
                        .HasColumnType("text");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("RefundId");

                    b.HasIndex("ReturnId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Return", b =>
                {
                    b.Property<int>("ReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReturnId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReturnDateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ReturnDateRefunded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("ReturnTotal")
                        .HasColumnType("double precision");

                    b.Property<string>("ReturnType")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("ReturnId");

                    b.HasIndex("CargoId");

                    b.HasIndex("OrderId");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.ShopOwner", b =>
                {
                    b.Property<int>("ShopOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShopOwnerId"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BankAccountHolder")
                        .HasColumnType("text");

                    b.Property<string>("BankAccountIban")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ShopOwnerId");

                    b.ToTable("ShopOwners");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.UserAddress", b =>
                {
                    b.Property<int>("UserAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserAddressId"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Basket", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Fulfillment", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Order", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.BillingInfo", "BillingInfo")
                        .WithMany("Orders")
                        .HasForeignKey("BillingInfoBillingId");

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Cargo", "Cargo")
                        .WithMany("Orders")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Fulfillment", "Fulfillments")
                        .WithMany()
                        .HasForeignKey("FulfillmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Refund", "Refund")
                        .WithMany("Orders")
                        .HasForeignKey("RefundId");

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingInfo");

                    b.Navigation("Cargo");

                    b.Navigation("Discount");

                    b.Navigation("Fulfillments");

                    b.Navigation("Product");

                    b.Navigation("Refund");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Product", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Discount", "Discount")
                        .WithMany("Products")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Refund", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Return", "Return")
                        .WithMany()
                        .HasForeignKey("ReturnId");

                    b.Navigation("Return");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Return", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersevaBackend.EntityLayer.Concrete.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.UserAddress", b =>
                {
                    b.HasOne("PersevaBackend.EntityLayer.Concrete.User", "User")
                        .WithMany("userAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.BillingInfo", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Cargo", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Discount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.Refund", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PersevaBackend.EntityLayer.Concrete.User", b =>
                {
                    b.Navigation("userAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
